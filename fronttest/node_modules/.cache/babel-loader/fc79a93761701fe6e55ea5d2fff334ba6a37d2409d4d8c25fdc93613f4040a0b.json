{"ast":null,"code":"export const createPermissionState = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n  return permissionDescriptor => wrapSubscribeFunction(observer => {\n    if (window === null || window.navigator === undefined || window.navigator.permissions === undefined || window.navigator.permissions.query === undefined) {\n      return emitNotSupportedError(observer);\n    }\n    let isActive = true;\n    let unsubscribe = () => {\n      isActive = false;\n    };\n    window.navigator.permissions.query(permissionDescriptor).then(permissionStatus => {\n      if (isActive) {\n        observer.next(permissionStatus.state);\n      }\n      if (isActive) {\n        permissionStatus.onchange = () => observer.next(permissionStatus.state);\n        unsubscribe = () => {\n          permissionStatus.onchange = null;\n        };\n      }\n    }, err => {\n      if (isActive) {\n        observer.error(err);\n      }\n    });\n    return () => unsubscribe();\n  });\n};","map":{"version":3,"names":["createPermissionState","emitNotSupportedError","window","wrapSubscribeFunction","permissionDescriptor","observer","navigator","undefined","permissions","query","isActive","unsubscribe","then","permissionStatus","next","state","onchange","err","error"],"sources":["/Users/asyuyukiume/AI学習/議事録　テスト/fronttest/node_modules/subscribable-things/src/factories/permission-state.ts"],"sourcesContent":["import { TPermissionStateFactory } from '../types';\n\nexport const createPermissionState: TPermissionStateFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (permissionDescriptor) =>\n        wrapSubscribeFunction((observer) => {\n            if (\n                window === null ||\n                window.navigator === undefined ||\n                window.navigator.permissions === undefined ||\n                window.navigator.permissions.query === undefined\n            ) {\n                return emitNotSupportedError(observer);\n            }\n\n            let isActive = true;\n            let unsubscribe = () => {\n                isActive = false;\n            };\n\n            window.navigator.permissions.query(permissionDescriptor).then(\n                (permissionStatus) => {\n                    if (isActive) {\n                        observer.next(permissionStatus.state);\n                    }\n\n                    if (isActive) {\n                        permissionStatus.onchange = () => observer.next(permissionStatus.state);\n\n                        unsubscribe = () => {\n                            permissionStatus.onchange = null;\n                        };\n                    }\n                },\n                (err) => {\n                    if (isActive) {\n                        observer.error(err);\n                    }\n                }\n            );\n\n            return () => unsubscribe();\n        });\n};\n"],"mappings":"AAEA,OAAO,MAAMA,qBAAqB,GAA4BA,CAACC,qBAAqB,EAAEC,MAAM,EAAEC,qBAAqB,KAAI;EACnH,OAAQC,oBAAoB,IACxBD,qBAAqB,CAAEE,QAAQ,IAAI;IAC/B,IACIH,MAAM,KAAK,IAAI,IACfA,MAAM,CAACI,SAAS,KAAKC,SAAS,IAC9BL,MAAM,CAACI,SAAS,CAACE,WAAW,KAAKD,SAAS,IAC1CL,MAAM,CAACI,SAAS,CAACE,WAAW,CAACC,KAAK,KAAKF,SAAS,EAClD;MACE,OAAON,qBAAqB,CAACI,QAAQ,CAAC;IAC1C;IAEA,IAAIK,QAAQ,GAAG,IAAI;IACnB,IAAIC,WAAW,GAAGA,CAAA,KAAK;MACnBD,QAAQ,GAAG,KAAK;IACpB,CAAC;IAEDR,MAAM,CAACI,SAAS,CAACE,WAAW,CAACC,KAAK,CAACL,oBAAoB,CAAC,CAACQ,IAAI,CACxDC,gBAAgB,IAAI;MACjB,IAAIH,QAAQ,EAAE;QACVL,QAAQ,CAACS,IAAI,CAACD,gBAAgB,CAACE,KAAK,CAAC;MACzC;MAEA,IAAIL,QAAQ,EAAE;QACVG,gBAAgB,CAACG,QAAQ,GAAG,MAAMX,QAAQ,CAACS,IAAI,CAACD,gBAAgB,CAACE,KAAK,CAAC;QAEvEJ,WAAW,GAAGA,CAAA,KAAK;UACfE,gBAAgB,CAACG,QAAQ,GAAG,IAAI;QACpC,CAAC;MACL;IACJ,CAAC,EACAC,GAAG,IAAI;MACJ,IAAIP,QAAQ,EAAE;QACVL,QAAQ,CAACa,KAAK,CAACD,GAAG,CAAC;MACvB;IACJ,CAAC,CACJ;IAED,OAAO,MAAMN,WAAW,EAAE;EAC9B,CAAC,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}