{"ast":null,"code":"/*\n * indefinite-article.js v1.0.0, 12-18-2011\n *\n * @author: Rodrigo Neri (@rigoneri)\n *\n * (The MIT License)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar indefiniteArticle = function (phrase) {\n  var i, word;\n\n  // Getting the first word\n  var match = /\\w+/.exec(phrase);\n  if (match) word = match[0];else return \"an\";\n  var l_word = word.toLowerCase();\n  // Specific start of words that should be preceeded by 'an'\n  var alt_cases = [\"honest\", \"hour\", \"hono\"];\n  for (i in alt_cases) {\n    if (l_word.indexOf(alt_cases[i]) == 0) return \"an\";\n  }\n\n  // Single letter word which should be preceeded by 'an'\n  if (l_word.length == 1) {\n    if (\"aedhilmnorsx\".indexOf(l_word) >= 0) return \"an\";else return \"a\";\n  }\n\n  // Capital words which should likely be preceeded by 'an'\n  if (word.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/)) {\n    return \"an\";\n  }\n\n  // Special cases where a word that begins with a vowel should be preceeded by 'a'\n  var regexes = [/^e[uw]/, /^onc?e\\b/, /^uni([^nmd]|mo)/, /^u[bcfhjkqrst][aeiou]/];\n  for (i = 0; i < regexes.length; i++) {\n    if (l_word.match(regexes[i])) return \"a\";\n  }\n\n  // Special capital words (UK, UN)\n  if (word.match(/^U[NK][AIEO]/)) {\n    return \"a\";\n  } else if (word == word.toUpperCase()) {\n    if (\"aedhilmnorsx\".indexOf(l_word[0]) >= 0) return \"an\";else return \"a\";\n  }\n\n  // Basic method of words that begin with a vowel being preceeded by 'an'\n  if (\"aeiou\".indexOf(l_word[0]) >= 0) return \"an\";\n\n  // Instances where y follwed by specific letters is preceeded by 'an'\n  if (l_word.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)) return \"an\";\n  return \"a\";\n};\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = indefiniteArticle;\n} else {\n  window.indefiniteArticle = indefiniteArticle;\n}","map":{"version":3,"names":["indefiniteArticle","phrase","i","word","match","exec","l_word","toLowerCase","alt_cases","indexOf","length","regexes","toUpperCase","module","exports","window"],"sources":["/Users/asyuyukiume/AI学習/議事録　テスト/fronttest/node_modules/indefinite-article/indefinite-article.js"],"sourcesContent":["/*\n * indefinite-article.js v1.0.0, 12-18-2011\n *\n * @author: Rodrigo Neri (@rigoneri)\n *\n * (The MIT License)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar indefiniteArticle = function(phrase) {\n    var i, word;\n\n    // Getting the first word\n    var match = /\\w+/.exec(phrase);\n    if (match)\n        word = match[0];\n    else\n        return \"an\";\n\n    var l_word = word.toLowerCase();\n    // Specific start of words that should be preceeded by 'an'\n    var alt_cases = [\"honest\", \"hour\", \"hono\"];\n    for (i in alt_cases) {\n        if (l_word.indexOf(alt_cases[i]) == 0)\n            return \"an\";\n    }\n\n    // Single letter word which should be preceeded by 'an'\n    if (l_word.length == 1) {\n        if (\"aedhilmnorsx\".indexOf(l_word) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Capital words which should likely be preceeded by 'an'\n    if (word.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/)) {\n        return \"an\";\n    }\n\n    // Special cases where a word that begins with a vowel should be preceeded by 'a'\n    var regexes = [/^e[uw]/, /^onc?e\\b/, /^uni([^nmd]|mo)/, /^u[bcfhjkqrst][aeiou]/];\n    for (i = 0; i < regexes.length; i++) {\n        if (l_word.match(regexes[i]))\n            return \"a\"\n    }\n\n    // Special capital words (UK, UN)\n    if (word.match(/^U[NK][AIEO]/)) {\n        return \"a\";\n    }\n    else if (word == word.toUpperCase()) {\n        if (\"aedhilmnorsx\".indexOf(l_word[0]) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Basic method of words that begin with a vowel being preceeded by 'an'\n    if (\"aeiou\".indexOf(l_word[0]) >= 0)\n        return \"an\";\n\n    // Instances where y follwed by specific letters is preceeded by 'an'\n    if (l_word.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/))\n        return \"an\";\n\n    return \"a\";\n};\n\nif ((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\n    module.exports = indefiniteArticle;\n} else {\n    window.indefiniteArticle = indefiniteArticle;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,iBAAiB,GAAG,SAAAA,CAASC,MAAM,EAAE;EACrC,IAAIC,CAAC,EAAEC,IAAI;;EAEX;EACA,IAAIC,KAAK,GAAG,KAAK,CAACC,IAAI,CAACJ,MAAM,CAAC;EAC9B,IAAIG,KAAK,EACLD,IAAI,GAAGC,KAAK,CAAC,CAAC,CAAC,CAAC,KAEhB,OAAO,IAAI;EAEf,IAAIE,MAAM,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC;EAC/B;EACA,IAAIC,SAAS,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC;EAC1C,KAAKN,CAAC,IAAIM,SAAS,EAAE;IACjB,IAAIF,MAAM,CAACG,OAAO,CAACD,SAAS,CAACN,CAAC,CAAC,CAAC,IAAI,CAAC,EACjC,OAAO,IAAI;EACnB;;EAEA;EACA,IAAII,MAAM,CAACI,MAAM,IAAI,CAAC,EAAE;IACpB,IAAI,cAAc,CAACD,OAAO,CAACH,MAAM,CAAC,IAAI,CAAC,EACnC,OAAO,IAAI,CAAC,KAEZ,OAAO,GAAG;EAClB;;EAEA;EACA,IAAIH,IAAI,CAACC,KAAK,CAAC,kGAAkG,CAAC,EAAE;IAChH,OAAO,IAAI;EACf;;EAEA;EACA,IAAIO,OAAO,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,iBAAiB,EAAE,uBAAuB,CAAC;EAChF,KAAKT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGS,OAAO,CAACD,MAAM,EAAER,CAAC,EAAE,EAAE;IACjC,IAAII,MAAM,CAACF,KAAK,CAACO,OAAO,CAACT,CAAC,CAAC,CAAC,EACxB,OAAO,GAAG;EAClB;;EAEA;EACA,IAAIC,IAAI,CAACC,KAAK,CAAC,cAAc,CAAC,EAAE;IAC5B,OAAO,GAAG;EACd,CAAC,MACI,IAAID,IAAI,IAAIA,IAAI,CAACS,WAAW,CAAC,CAAC,EAAE;IACjC,IAAI,cAAc,CAACH,OAAO,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EACtC,OAAO,IAAI,CAAC,KAEZ,OAAO,GAAG;EAClB;;EAEA;EACA,IAAI,OAAO,CAACG,OAAO,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAC/B,OAAO,IAAI;;EAEf;EACA,IAAIA,MAAM,CAACF,KAAK,CAAC,yCAAyC,CAAC,EACvD,OAAO,IAAI;EAEf,OAAO,GAAG;AACd,CAAC;AAED,IAAK,OAAOS,MAAM,KAAK,WAAW,IAAM,OAAOA,MAAM,CAACC,OAAO,KAAK,WAAY,EAAE;EAC5ED,MAAM,CAACC,OAAO,GAAGd,iBAAiB;AACtC,CAAC,MAAM;EACHe,MAAM,CAACf,iBAAiB,GAAGA,iBAAiB;AAChD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}