{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/asyuyukiume/AI学習/議事録　テスト/fronttest/node_modules/extendable-media-recorder/src/interfaces/media-recorder.ts"],"sourcesContent":["import { TBlobEventHandler, TErrorEventHandler, TEventHandler, TRecordingState } from '../types';\nimport { IEventTarget } from './event-target';\nimport { IMediaRecorderEventMap } from './media-recorder-event-map';\n\n// @todo TypeScript does not include type definitions for the MediaStream Recording specification yet.\nexport interface IMediaRecorder extends IEventTarget<IMediaRecorderEventMap> {\n    readonly mimeType: string;\n\n    ondataavailable: null | TBlobEventHandler<this>;\n\n    onerror: null | TErrorEventHandler<this>;\n\n    onpause: null | TEventHandler<this>;\n\n    onresume: null | TEventHandler<this>;\n\n    onstart: null | TEventHandler<this>;\n\n    onstop: null | TEventHandler<this>;\n\n    readonly state: TRecordingState;\n\n    pause(): void;\n\n    resume(): void;\n\n    start(timeslice?: number): void;\n\n    stop(): void;\n}\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}