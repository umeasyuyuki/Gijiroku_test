{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/asyuyukiume/AI学習/議事録　テスト/fronttest/node_modules/rxjs-interop/source/types.ts"],"sourcesContent":["/**\n * @license Use of this source code is governed by an MIT-style license that\n * can be found in the LICENSE file at https://github.com/cartant/rxjs-interop\n */\n\nexport type InteropObservable<T> = {\n  [Symbol.observable]: () => Subscribable<T>;\n};\n\nexport type Observer<T> = {\n  closed?: boolean;\n  complete(): void;\n  error(error: any): void;\n  next(value: T): void;\n};\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\nexport type Subscribable<T> = {\n  subscribe(observer?: PartialObserver<T>): Unsubscribable;\n};\n\nexport type Unsubscribable = {\n  unsubscribe(): void;\n};\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}