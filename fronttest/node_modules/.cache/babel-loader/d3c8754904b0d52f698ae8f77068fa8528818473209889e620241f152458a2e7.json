{"ast":null,"code":"export const createUnhandledRejection = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n  return coolingOffPeriod => wrapSubscribeFunction(observer => {\n    if (window === null || window.clearInterval === undefined || window.setInterval === undefined) {\n      return emitNotSupportedError(observer);\n    }\n    const possiblyUnhandledRejections = new Map();\n    let intervalId = null;\n    const deletePossiblyUnhandledRejection = ({\n      promise\n    }) => possiblyUnhandledRejections.delete(promise);\n    const emitUnhandledRejection = () => {\n      const latestTimestampToEmit = Date.now() - coolingOffPeriod;\n      possiblyUnhandledRejections.forEach(({\n        reason,\n        timestamp\n      }, promise) => {\n        if (timestamp > latestTimestampToEmit) {\n          return;\n        }\n        possiblyUnhandledRejections.delete(promise);\n        observer.next(reason);\n      });\n      if (intervalId !== null && possiblyUnhandledRejections.size === 0) {\n        window.clearInterval(intervalId);\n        intervalId = null;\n      }\n    };\n    const registerPossiblyUnhandledRejection = event => {\n      event.preventDefault();\n      possiblyUnhandledRejections.set(event.promise, {\n        reason: event.reason,\n        timestamp: Date.now()\n      });\n      if (intervalId === null) {\n        intervalId = window.setInterval(emitUnhandledRejection, coolingOffPeriod / 2);\n      }\n    };\n    window.addEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n    window.addEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n    return () => {\n      if (intervalId !== null) {\n        window.clearInterval(intervalId);\n      }\n      window.removeEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n      window.removeEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n    };\n  });\n};","map":{"version":3,"names":["createUnhandledRejection","emitNotSupportedError","window","wrapSubscribeFunction","coolingOffPeriod","observer","clearInterval","undefined","setInterval","possiblyUnhandledRejections","Map","intervalId","deletePossiblyUnhandledRejection","promise","delete","emitUnhandledRejection","latestTimestampToEmit","Date","now","forEach","reason","timestamp","next","size","registerPossiblyUnhandledRejection","event","preventDefault","set","addEventListener","removeEventListener"],"sources":["/Users/asyuyukiume/AI学習/議事録　テスト/fronttest/node_modules/subscribable-things/src/factories/unhandled-rejection.ts"],"sourcesContent":["import { TUnhandledRejectionFactory } from '../types';\n\nexport const createUnhandledRejection: TUnhandledRejectionFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (coolingOffPeriod) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.clearInterval === undefined || window.setInterval === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const possiblyUnhandledRejections = new Map<Promise<any>, { reason: any; timestamp: number }>();\n\n            let intervalId: null | number = null;\n\n            const deletePossiblyUnhandledRejection = ({ promise }: PromiseRejectionEvent) => possiblyUnhandledRejections.delete(promise);\n            const emitUnhandledRejection = () => {\n                const latestTimestampToEmit = Date.now() - coolingOffPeriod;\n\n                possiblyUnhandledRejections.forEach(({ reason, timestamp }, promise) => {\n                    if (timestamp > latestTimestampToEmit) {\n                        return;\n                    }\n\n                    possiblyUnhandledRejections.delete(promise);\n                    observer.next(reason);\n                });\n\n                if (intervalId !== null && possiblyUnhandledRejections.size === 0) {\n                    window.clearInterval(intervalId);\n                    intervalId = null;\n                }\n            };\n            const registerPossiblyUnhandledRejection = (event: PromiseRejectionEvent) => {\n                event.preventDefault();\n\n                possiblyUnhandledRejections.set(event.promise, {\n                    reason: event.reason,\n                    timestamp: Date.now()\n                });\n\n                if (intervalId === null) {\n                    intervalId = window.setInterval(emitUnhandledRejection, coolingOffPeriod / 2);\n                }\n            };\n\n            window.addEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n            window.addEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n\n            return () => {\n                if (intervalId !== null) {\n                    window.clearInterval(intervalId);\n                }\n\n                window.removeEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n                window.removeEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n            };\n        });\n};\n"],"mappings":"AAEA,OAAO,MAAMA,wBAAwB,GAA+BA,CAACC,qBAAqB,EAAEC,MAAM,EAAEC,qBAAqB,KAAI;EACzH,OAAQC,gBAAgB,IACpBD,qBAAqB,CAAEE,QAAQ,IAAI;IAC/B,IAAIH,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACI,aAAa,KAAKC,SAAS,IAAIL,MAAM,CAACM,WAAW,KAAKD,SAAS,EAAE;MAC3F,OAAON,qBAAqB,CAACI,QAAQ,CAAC;IAC1C;IAEA,MAAMI,2BAA2B,GAAG,IAAIC,GAAG,EAAoD;IAE/F,IAAIC,UAAU,GAAkB,IAAI;IAEpC,MAAMC,gCAAgC,GAAGA,CAAC;MAAEC;IAAO,CAAyB,KAAKJ,2BAA2B,CAACK,MAAM,CAACD,OAAO,CAAC;IAC5H,MAAME,sBAAsB,GAAGA,CAAA,KAAK;MAChC,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAGd,gBAAgB;MAE3DK,2BAA2B,CAACU,OAAO,CAAC,CAAC;QAAEC,MAAM;QAAEC;MAAS,CAAE,EAAER,OAAO,KAAI;QACnE,IAAIQ,SAAS,GAAGL,qBAAqB,EAAE;UACnC;QACJ;QAEAP,2BAA2B,CAACK,MAAM,CAACD,OAAO,CAAC;QAC3CR,QAAQ,CAACiB,IAAI,CAACF,MAAM,CAAC;MACzB,CAAC,CAAC;MAEF,IAAIT,UAAU,KAAK,IAAI,IAAIF,2BAA2B,CAACc,IAAI,KAAK,CAAC,EAAE;QAC/DrB,MAAM,CAACI,aAAa,CAACK,UAAU,CAAC;QAChCA,UAAU,GAAG,IAAI;MACrB;IACJ,CAAC;IACD,MAAMa,kCAAkC,GAAIC,KAA4B,IAAI;MACxEA,KAAK,CAACC,cAAc,EAAE;MAEtBjB,2BAA2B,CAACkB,GAAG,CAACF,KAAK,CAACZ,OAAO,EAAE;QAC3CO,MAAM,EAAEK,KAAK,CAACL,MAAM;QACpBC,SAAS,EAAEJ,IAAI,CAACC,GAAG;OACtB,CAAC;MAEF,IAAIP,UAAU,KAAK,IAAI,EAAE;QACrBA,UAAU,GAAGT,MAAM,CAACM,WAAW,CAACO,sBAAsB,EAAEX,gBAAgB,GAAG,CAAC,CAAC;MACjF;IACJ,CAAC;IAEDF,MAAM,CAAC0B,gBAAgB,CAAC,kBAAkB,EAAEhB,gCAAgC,CAAC;IAC7EV,MAAM,CAAC0B,gBAAgB,CAAC,oBAAoB,EAAEJ,kCAAkC,CAAC;IAEjF,OAAO,MAAK;MACR,IAAIb,UAAU,KAAK,IAAI,EAAE;QACrBT,MAAM,CAACI,aAAa,CAACK,UAAU,CAAC;MACpC;MAEAT,MAAM,CAAC2B,mBAAmB,CAAC,kBAAkB,EAAEjB,gCAAgC,CAAC;MAChFV,MAAM,CAAC2B,mBAAmB,CAAC,oBAAoB,EAAEL,kCAAkC,CAAC;IACxF,CAAC;EACL,CAAC,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}