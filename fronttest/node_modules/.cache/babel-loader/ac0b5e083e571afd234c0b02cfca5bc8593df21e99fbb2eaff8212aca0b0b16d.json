{"ast":null,"code":"export const createPrependSubscribableThing = wrapSubscribeFunction => (subscribableThing, prependedValue) => wrapSubscribeFunction(observer => {\n  observer.next(prependedValue);\n  return subscribableThing(observer);\n});","map":{"version":3,"names":["createPrependSubscribableThing","wrapSubscribeFunction","subscribableThing","prependedValue","observer","next"],"sources":["/Users/asyuyukiume/AI学習/議事録　テスト/fronttest/node_modules/subscribable-things/src/factories/prepend-subscribable-thing.ts"],"sourcesContent":["import { TSubscribableThing, TWrapSubscribeFunctionFunction } from '../types';\n\nexport const createPrependSubscribableThing =\n    (wrapSubscribeFunction: TWrapSubscribeFunctionFunction) =>\n    <TValue, TPrependedValue>(\n        subscribableThing: TSubscribableThing<TValue>,\n        prependedValue: TPrependedValue\n    ): TSubscribableThing<TPrependedValue | TValue> =>\n        wrapSubscribeFunction((observer) => {\n            observer.next(prependedValue);\n\n            return subscribableThing(observer);\n        });\n"],"mappings":"AAEA,OAAO,MAAMA,8BAA8B,GACtCC,qBAAqD,IACtD,CACIC,iBAA6C,EAC7CC,cAA+B,KAE/BF,qBAAqB,CAAEG,QAAQ,IAAI;EAC/BA,QAAQ,CAACC,IAAI,CAACF,cAAc,CAAC;EAE7B,OAAOD,iBAAiB,CAACE,QAAQ,CAAC;AACtC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}