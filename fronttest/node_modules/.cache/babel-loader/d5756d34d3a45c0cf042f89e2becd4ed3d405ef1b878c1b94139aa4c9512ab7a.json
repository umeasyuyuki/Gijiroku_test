{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/asyuyukiume/AI学習/議事録　テスト/fronttest/node_modules/subscribable-things/src/interfaces/wake-lock-sentinel.ts"],"sourcesContent":["import { TReleaseEventHandler, TWakeLockType } from '../types';\nimport { IWakeLockSentinelEventMap } from './wake-lock-sentinel-event-map';\n\n// @todo TypeScript does not include type definitions for the Screen Wake Lock API yet.\nexport interface IWakeLockSentinel extends EventTarget {\n    onrelease: null | TReleaseEventHandler<this>;\n\n    readonly type: TWakeLockType;\n\n    addEventListener<K extends keyof IWakeLockSentinelEventMap>(\n        type: K,\n        listener: (this: this, event: IWakeLockSentinelEventMap[K]) => void,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n\n    release(): Promise<void>;\n\n    removeEventListener<K extends keyof IWakeLockSentinelEventMap>(\n        type: K,\n        listener: (this: this, event: IWakeLockSentinelEventMap[K]) => void,\n        options?: boolean | EventListenerOptions\n    ): void;\n\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}