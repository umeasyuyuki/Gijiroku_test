{"ast":null,"code":"import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst ONGOING_REQUESTS = new WeakMap();\nconst createOrGetOngoingRequests = sender => {\n  if (ONGOING_REQUESTS.has(sender)) {\n    // @todo TypeScript needs to be convinced that has() works as expected.\n    return ONGOING_REQUESTS.get(sender);\n  }\n  const ongoingRequests = new Map();\n  ONGOING_REQUESTS.set(sender, ongoingRequests);\n  return ongoingRequests;\n};\nexport const createBroker = brokerImplementation => {\n  const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n  return sender => {\n    const ongoingRequests = createOrGetOngoingRequests(sender);\n    sender.addEventListener('message', ({\n      data: message\n    }) => {\n      const {\n        id\n      } = message;\n      if (id !== null && ongoingRequests.has(id)) {\n        const {\n          reject,\n          resolve\n        } = ongoingRequests.get(id);\n        ongoingRequests.delete(id);\n        if (message.error === undefined) {\n          resolve(message.result);\n        } else {\n          reject(new Error(message.error.message));\n        }\n      }\n    });\n    if (isMessagePort(sender)) {\n      sender.start();\n    }\n    const call = (method, params = null, transferables = []) => {\n      return new Promise((resolve, reject) => {\n        const id = generateUniqueNumber(ongoingRequests);\n        ongoingRequests.set(id, {\n          reject,\n          resolve\n        });\n        if (params === null) {\n          sender.postMessage({\n            id,\n            method\n          }, transferables);\n        } else {\n          sender.postMessage({\n            id,\n            method,\n            params\n          }, transferables);\n        }\n      });\n    };\n    const notify = (method, params, transferables = []) => {\n      sender.postMessage({\n        id: null,\n        method,\n        params\n      }, transferables);\n    };\n    let functions = {};\n    for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n      functions = {\n        ...functions,\n        [key]: handler({\n          call,\n          notify\n        })\n      };\n    }\n    return {\n      ...functions\n    };\n  };\n};","map":{"version":3,"names":["generateUniqueNumber","isMessagePort","extendBrokerImplementation","ONGOING_REQUESTS","WeakMap","createOrGetOngoingRequests","sender","has","get","ongoingRequests","Map","set","createBroker","brokerImplementation","fullBrokerImplementation","addEventListener","data","message","id","reject","resolve","delete","error","undefined","result","Error","start","call","method","params","transferables","Promise","postMessage","notify","functions","key","handler","Object","entries"],"sources":["/Users/asyuyukiume/AI学習/議事録　テスト/fronttest/node_modules/broker-factory/src/module.ts"],"sourcesContent":["import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { IWorkerDefinition, IWorkerErrorMessage, IWorkerResultMessage } from 'worker-factory';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\nimport { IBrokerDefinition, IDefaultBrokerDefinition, IWorkerEvent } from './interfaces';\nimport { TBrokerImplementation } from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst ONGOING_REQUESTS = new WeakMap<MessagePort | Worker, Map<number, { reject: Function; resolve: Function }>>();\n\nconst createOrGetOngoingRequests = (sender: MessagePort | Worker): Map<number, { reject: Function; resolve: Function }> => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return <Map<number, { reject: Function; resolve: Function }>>ONGOING_REQUESTS.get(sender);\n    }\n\n    const ongoingRequests: Map<number, { reject: Function; resolve: Function }> = new Map();\n\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n\n    return ongoingRequests;\n};\n\nexport const createBroker = <T extends IBrokerDefinition, U extends IWorkerDefinition>(\n    brokerImplementation: TBrokerImplementation<T, U>\n): ((sender: MessagePort | Worker) => T & IDefaultBrokerDefinition) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n\n    return (sender: MessagePort | Worker) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n\n        sender.addEventListener('message', <EventListener>(({ data: message }: IWorkerEvent) => {\n            const { id } = message;\n\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = <{ reject: Function; resolve: Function }>ongoingRequests.get(id);\n\n                ongoingRequests.delete(id);\n\n                if ((<IWorkerErrorMessage>message).error === undefined) {\n                    resolve((<IWorkerResultMessage>message).result);\n                } else {\n                    reject(new Error((<IWorkerErrorMessage>message).error.message));\n                }\n            }\n        }));\n\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n\n        const call = <V extends keyof U>(method: V, params: U[V]['params'] = null, transferables: U[V]['transferables'] = []) => {\n            return new Promise<U[V]['response']['result']>((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n\n                ongoingRequests.set(id, { reject, resolve });\n\n                if (params === null) {\n                    sender.postMessage({ id, method }, <Transferable[]>transferables);\n                } else {\n                    sender.postMessage({ id, method, params }, <Transferable[]>transferables);\n                }\n            });\n        };\n        const notify = <V extends keyof U>(method: V, params: U[V]['params'], transferables: U[V]['transferables'] = []) => {\n            sender.postMessage({ id: null, method, params }, <Transferable[]>transferables);\n        };\n\n        let functions: object = {};\n\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = { ...functions, [key]: handler({ call, notify }) };\n        }\n\n        return <T & IDefaultBrokerDefinition>{ ...functions };\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}