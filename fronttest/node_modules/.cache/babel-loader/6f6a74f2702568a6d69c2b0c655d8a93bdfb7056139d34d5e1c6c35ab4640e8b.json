{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/asyuyukiume/AI学習/議事録　テスト/fronttest/node_modules/subscribable-things/src/types/window.ts"],"sourcesContent":["import { IReport, IReportingObserver, IReportingObserverOptions, IResizeObserver, IResizeObserverEntry, IWakeLock } from '../interfaces';\n\nexport type TWindow = Window &\n    typeof globalThis & {\n        // @todo TypeScript does not include type definitions for the Screen Wake Lock API yet.\n        readonly navigator: Navigator & { wakeLock: IWakeLock };\n\n        // @todo TypeScript does not include type definitions for the Reporting API yet.\n        ReportingObserver: {\n            prototype: IReportingObserver;\n\n            new (\n                callback: (reports: IReport[], observer: IReportingObserver) => void,\n                options?: IReportingObserverOptions\n            ): IReportingObserver;\n        };\n\n        // @todo TypeScript does not include type definitions for the Resize Observer specification yet.\n        ResizeObserver: {\n            prototype: IResizeObserver;\n\n            new (callback: (entries: IResizeObserverEntry[], observer: IResizeObserver) => void): IResizeObserver;\n        };\n    };\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}